#!/usr/bin/env node

const fs = require("fs/promises");

const Reset = "\x1b[0m";
const FgRed = "\x1b[31m";
const FgCyan = "\x1b[36m";
const FgWhite = "\x1b[37m";

(async () => {
  // Parse flags.
  const flags = process.argv.slice(2);
  if (flags.includes("-h") || flags.includes("--help")) {
    printHelp();
    return;
  }

  // Get output file.
  const outputFile = flags[0];
  if (!outputFile) {
    logError("No output file given!");
    return;
  }
  if (!outputFile.match(/\.ts$|\.mts$|\.cts$|\.js$|\.mjs$|\.cjs$/)) {
    logError("Output file must be a TypeScript or JavaScript file!");
    return;
  }

  // Get the version.
  const version = await getVersion();
  if (!version) {
    logError("Could not find version in package.json!");
    return;
  }

  logInfo(`Found version: ${version}`);

  // Write the version to the output file.
  await fs.writeFile(outputFile, `export const VERSION = "${version}";`);

  logInfo(`Wrote version to ${outputFile}`);
})();

/**
 * Logs an error message to the console.
 *
 * @param {string} msg
 */
function logError(msg) {
  console.error(`${FgRed}${msg}${Reset}`);
}

/**
 * Logs an info message to the console.
 *
 * @param {string} msg
 */
function logInfo(msg) {
  console.info(`${FgWhite}${msg}${Reset}`);
}

/**
 * Print help.
 */
function printHelp() {
  console.info(`
    ${FgCyan}Usage: node-pkg-version-export [options] output-file

    Options:
      -h, --help            output usage information
      -V, --version         output the version number
  `);
}

/**
 * Get the version from package.json.
 */
async function getVersion() {
  const packageJson = await fs.readFile("package.json", "utf8");

  try {
    return JSON.parse(packageJson).version;
  } catch (e) {
    return null;
  }
}
